/*
 * HnDataItem.cc
 *
 * DO NOT EDIT THIS FILE!
 *
 * This file is automatically generated by obj2ptr.
 * 2002/09/13 12:41:10
 */

#include "HnSRTree/HnDataItem.hh"
#include "HnSRTree/HnDataItemObj.hh"

/*
 * HnDataItem
 */

const HnDataItem HnDataItem::null;

HnDataItem
new_HnDataItem(void)
{
    HnDataItemObj *_obj;

    _obj = new HnDataItemObj();

    if ( _obj->hasConstructorFailed() ) {
        delete _obj;
        return (HnDataItemObj *)NULL;
    }

    return _obj;
}

HnDataItem
new_HnDataItem(int n)
{
    HnDataItemObj *_obj;

    _obj = new HnDataItemObj(n);

    if ( _obj->hasConstructorFailed() ) {
        delete _obj;
        return (HnDataItemObj *)NULL;
    }

    return _obj;
}

HnDataItem
new_HnDataItem(const void *ptr, int n)
{
    HnDataItemObj *_obj;

    _obj = new HnDataItemObj(ptr, n);

    if ( _obj->hasConstructorFailed() ) {
        delete _obj;
        return (HnDataItemObj *)NULL;
    }

    return _obj;
}

HnDataItem
new_HnDataItem(const void *ptr1, int n1, const void *ptr2, int n2)
{
    HnDataItemObj *_obj;

    _obj = new HnDataItemObj(ptr1, n1, ptr2, n2);

    if ( _obj->hasConstructorFailed() ) {
        delete _obj;
        return (HnDataItemObj *)NULL;
    }

    return _obj;
}

HnDataItem
new_HnDataItem(int n, HnBlockStream &blockStream)
{
    HnDataItemObj *_obj;

    _obj = new HnDataItemObj(n, blockStream);

    if ( _obj->hasConstructorFailed() ) {
        delete _obj;
        return (HnDataItemObj *)NULL;
    }

    return _obj;
}

#define HnClass HnDataItem
#include "HnSRTree/HnClassArray.cpp"

